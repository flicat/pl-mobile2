import{U as s,i as a}from"./vendor.6f33ac2d.js";const n=s({name:"Markdown"});n.render=()=>a("div",{class:["md2vue-wrapper","markdown-body"],innerHTML:'<h2 id="canvas-签字板">canvas 签字板</h2>\n<h3 id="基础用法">基础用法</h3>\n<pre><code class="language-html"><div class="md-code-hijs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pl-canvas</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;clear&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>清除画布<span class="hljs-tag">&lt;/<span class="hljs-name">pl-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getImageDataUrl&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>获取dataURL<span class="hljs-tag">&lt;/<span class="hljs-name">pl-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">let</span> src = ref(<span class="hljs-string">&#x27;&#x27;</span>)\n    <span class="hljs-keyword">let</span> canvas = ref(<span class="hljs-literal">null</span>)\n    <span class="hljs-comment">// 清除画布</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clear</span>(<span class="hljs-params"></span>) </span>{\n      canvas.value.clear()\n    }\n    <span class="hljs-comment">// 获取画布内容 DataUrl</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getImageDataUrl</span>(<span class="hljs-params"></span>) </span>{\n      <span class="hljs-keyword">let</span> result = canvas.value.getImageDataUrl()\n      src.value = result\n    }\n\n    <span class="hljs-keyword">return</span> {\n      canvas,\n      clear,\n      getImageDataUrl\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></div>\n</code></pre>\n<h3 id="获取-jpg-格式的-blob-图片对象">获取 jpg 格式的 Blob 图片对象</h3>\n<pre><code class="language-html"><div class="md-code-hijs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">pl-canvas</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">&quot;getImageBlob&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;primary&quot;</span>&gt;</span>获取BLob<span class="hljs-tag">&lt;/<span class="hljs-name">pl-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">\n<span class="hljs-keyword">import</span> { ref } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>\n\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> {\n  <span class="hljs-function"><span class="hljs-title">setup</span>(<span class="hljs-params"></span>)</span> {\n    <span class="hljs-keyword">let</span> src = ref(<span class="hljs-string">&#x27;&#x27;</span>)\n    <span class="hljs-keyword">let</span> canvas = ref(<span class="hljs-literal">null</span>)\n\n    <span class="hljs-comment">// 获取blob</span>\n    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getImageBlob</span>(<span class="hljs-params"></span>) </span>{\n      <span class="hljs-keyword">let</span> result = canvas.value.getImageBlob(<span class="hljs-string">&#x27;image/jpeg&#x27;</span>)\n      src.value = URL.createObjectURL(result)\n    }\n\n    <span class="hljs-keyword">return</span> {\n      canvas,\n      getImageBlob\n    }\n  }\n}\n</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></div>\n</code></pre>\n<h3 id="横向画板">横向画板</h3>\n<pre><code class="language-html"><div class="md-code-hijs"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">pl-canvas</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;canvas&quot;</span> <span class="hljs-attr">orientation</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;placeholder&quot;</span>&gt;</span>请在此处签名<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">pl-canvas</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></div>\n</code></pre>\n<h3 id="attributes">Attributes</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>size</td>\n<td>笔触大小</td>\n<td>Number</td>\n<td>—</td>\n<td>14</td>\n</tr>\n<tr>\n<td>orientation</td>\n<td>画布朝向</td>\n<td>String</td>\n<td>top / right / bottom / left</td>\n<td>top</td>\n</tr>\n<tr>\n<td>penId</td>\n<td>笔触id</td>\n<td>Number</td>\n<td>0 / 1</td>\n<td>0</td>\n</tr>\n<tr>\n<td>fillStyle</td>\n<td>canvas背景色，设置后会遮挡住placeholder，如果需要导出jpg图片，则必须设置，否则会产生黑底</td>\n<td>String</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody></table>\n<h3 id="slots">Slots</h3>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>placeholder</td>\n<td>画布空白遮罩</td>\n</tr>\n</tbody></table>\n<h3 id="methods">Methods</h3>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>说明</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>clear</td>\n<td>清空画板</td>\n<td>—</td>\n</tr>\n<tr>\n<td>getImageDataUrl</td>\n<td>获取图像 DataUrl</td>\n<td>[type, encoderOptions]</td>\n</tr>\n<tr>\n<td>getImageBlob</td>\n<td>获取图像 Blob</td>\n<td>[type, encoderOptions]</td>\n</tr>\n</tbody></table>\n<h3 id="events">Events</h3>\n<table>\n<thead>\n<tr>\n<th>事件名称</th>\n<th>说明</th>\n<th>回调参数</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>drawStart</td>\n<td>开始绘画</td>\n<td>—</td>\n</tr>\n<tr>\n<td>drawing</td>\n<td>绘画中</td>\n<td>—</td>\n</tr>\n<tr>\n<td>drawEnd</td>\n<td>绘画结束</td>\n<td>—</td>\n</tr>\n<tr>\n<td>clear</td>\n<td>清除画布</td>\n<td>—</td>\n</tr>\n</tbody></table>\n'}),n.mounted=()=>{};export{n as default};
